name: Make release & publish Docker image

on:
  push:
    tags:
    - 'v*'

jobs:
  publish:
    strategy:
      matrix:
        runner-platform:
          - ubuntu-latest
          - buildjet-4vcpu-ubuntu-2204-arm
        include:
          - runner-platform: ubuntu-latest
            build-arch: linux/amd64
            tagged-platform: amd64
          - runner-platform: buildjet-4vcpu-ubuntu-2204-arm
            build-arch: linux/arm64
            tagged-platform: arm64
    runs-on: ${{ matrix.runner-platform }}
    steps:
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        # AWS data transfer is pricy
        if: ${{ matrix.runner-platform != 'buildjet-4vcpu-ubuntu-2204-arm' }}
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-prs-${{ matrix.build-arch }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-prs-${{ matrix.build-arch }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get current time
        uses: josStorer/get-current-time@v2
        id: current-time

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: codetheweb/muse:${{ github.sha }}-${{ matrix.tagged-platform }}
          platforms: ${{ matrix.build-arch }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=min
          build-args: |
            COMMIT_HASH=${{ github.sha }}
            BUILD_DATE=${{ steps.current-time.outputs.time }}

  combine:
    name: Combine platform tags
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - uses: actions/checkout@v1

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get tags
        id: get-tags
        uses: Surgo/docker-smart-tag-action@v1
        with:
          docker_image: codetheweb/muse

      - name: Combine tags
        run: docker buildx imagetools create $(echo '${{ steps.get-tags.outputs.tag }}' | tr "," "\0" | xargs -0 printf -- '-t %s ') 'codetheweb/muse:${{ github.sha }}-arm64' 'codetheweb/muse:${{ github.sha }}-amd64'

      - name: Update Docker Hub description
        uses: peter-evans/dockerhub-description@v2.4.3
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          DOCKERHUB_REPOSITORY: codetheweb/muse

  release:
    name: Create GitHub release
    runs-on: ubuntu-latest
    needs: combine
    steps:
      - uses: actions/checkout@v2

      - name: Get version from tag
        id: tag_name
        run: |
          echo ::set-output name=current_version::${GITHUB_REF#refs/tags/v}
        shell: bash

      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          version: ${{ steps.tag_name.outputs.current_version }}
          path: ./CHANGELOG.md

      - name: Create/update release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ steps.changelog_reader.outputs.version }}
          name: Release v${{ steps.changelog_reader.outputs.version }}
          body: ${{ steps.changelog_reader.outputs.changes }}
          prerelease: ${{ steps.changelog_reader.outputs.status == 'prereleased' }}
          draft: ${{ steps.changelog_reader.outputs.status == 'unreleased' }}
          allowUpdates: true
          token: ${{ secrets.GH_PAT }}
